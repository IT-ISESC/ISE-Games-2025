---
// Interface for Match data
export interface Match {
	team1: string
	team2: string
	score1: number
	score2: number
	winner: string
	date: string
	time: string
	week: string
	location: string
	status: string
}
export interface Props {
	matchData: Match[]
}
const { matchData } = Astro.props

// Group and sort matches by week
const matchesByWeek = matchData.reduce(
	(acc, match) => {
		const week = match.week
		if (!acc[week]) {
			acc[week] = []
		}
		acc[week].push(match)
		return acc
	},
	{} as Record<number, Match[]>
)
const sortedWeeks = Object.keys(matchesByWeek).sort(
	(a, b) => Number(a) - Number(b)
)

// Colour mapping for winners
const winnerColors = {
	ADME: 'text-[#FFE840]',
	ICE: 'text-[#68BEE0]',
	AERO: 'text-[#DD6B62]',
	NANO: 'text-[#72A37B]',
	AI: 'text-[#CF97D4]',
}
---

{
	sortedWeeks.map((week) => (
		<div id={`week-${week}`}>
			<h1 class="m-6 mb-0 text-2xl font-bold text-[#012D48]">
				Week {week}
			</h1>
			<hr class="mx-6 my-1 border-1 border-[#012D48]" />
			{matchesByWeek[week].map((match) => (
				// Change box colour depending on match status
				<div
					class={`m-6 rounded-xl p-3 text-[#F2E8CF] ${match.status === 'Done' ? 'bg-[#9C4035]' : 'bg-[#D87F27]'}`}
				>
					{/* Match is On-going */}
					<div
						class={`${match.status === 'On-going' ? '' : 'hidden'}`}
					>
						<div class="flex justify-between gap-10">
							<span class="text-xl">
								<st>{match.team1}</st> vs <st>{match.team2}</st>
							</span>
							<span class="text-lg">{match.date}</span>
						</div>
						<div class="mt-2 flex items-center justify-between">
							<span class="text-xs">@ {match.location}</span>
							<span class="text-xs">{match.time}</span>
						</div>
					</div>

					{/* Match is Done */}
					<div class={`${match.status === 'Done' ? '' : 'hidden'}`}>
						<div class="flex h-full items-center justify-between gap-10">
							<div class="flex w-[60%] flex-col gap-2">
								<div class="flex justify-between gap-10">
									<span
										class={`w-40 truncate text-lg ${match.winner === match.team1 ? 'font-bold' : ''}`}
									>
										<span
											class={`${match.winner === match.team1 ? 'opacity-100' : 'opacity-0'}`}
										>
											•
										</span>
										{match.team1}
									</span>
									<span class="text-lg">{match.score1}</span>
								</div>
								<div class="flex justify-between gap-10">
									<span
										class={`w-40 truncate text-lg ${match.winner === match.team2 ? 'font-bold' : ''}`}
									>
										<span
											class={`${match.winner === match.team2 ? 'opacity-100' : 'opacity-0'}`}
										>
											•
										</span>
										{match.team2}
									</span>
									<span class="text-lg">{match.score2}</span>
								</div>
							</div>
							<div class="flex h-full flex-col items-center border-l pl-2.5">
								<span>{match.date}</span>
								<span>{match.time}</span>
							</div>
						</div>
					</div>
				</div>
			))}
		</div>
	))
}
