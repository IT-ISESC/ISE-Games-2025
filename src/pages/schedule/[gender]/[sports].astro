---
import Layouts from '../../../layouts/layouts.astro'
import SportsHeader from '../../../components/shared/sports_header/sports_header.astro'
import ScheduleTable from '../../../components/schedule/schedule_table.astro'

// Dynamic Routes
export function getStaticPaths() {
	const paths = [
		{ params: { gender: 'male', sports: 'basketball' } },
		{ params: { gender: 'female', sports: 'basketball' } },
		{ params: { gender: 'male', sports: 'futsal' } },
		{ params: { gender: 'female', sports: 'futsal' } },
		{ params: { gender: 'female', sports: 'chairball' } },
		{ params: { gender: 'male', sports: 'badminton' } },
		{ params: { gender: 'female', sports: 'badminton' } },
		{ params: { gender: 'mixed', sports: 'rov' } },
		{ params: { gender: 'mixed', sports: 'valorant' } },
	]
	return paths
}

// Use the gender and sports name to do other things
const { gender, sports } = Astro.params
const sportName = sports.charAt(0).toUpperCase() + sports.slice(1)
const imagePath = `/images/schedule/sports_logo/${sports.toLowerCase()}.svg`

// Construct the combination key
var combinationKey = `${sports}_${gender}`
if (combinationKey === 'chairball_male') {
	combinationKey = 'chairball_female'
}

// Make a GET request to the API
const BASE_URL =
	process.env.NODE_ENV === 'production'
		? 'https://ise-games-2025.vercel.app'
		: 'http://localhost:4321'
const apiUrl = `${BASE_URL}/api/${combinationKey}`

const matchData = await fetch(apiUrl)
	.then(async (response) => {
		const text = await response.text()
		try {
			const jsonData = JSON.parse(text)
			return jsonData
		} catch (error) {
			console.error('❌ API did not return JSON. Raw response:', text)
			throw new Error('Invalid JSON response')
		}
	})
	.catch((error) => {
		console.error('🚨 Error fetching match data:', error)
		return null
	})
---

<Layouts>
	<SportsHeader
		page="schedule"
		image={imagePath}
		title={sportName}
		gender={gender}
	/>
	<ScheduleTable matchData={matchData} />
</Layouts>
